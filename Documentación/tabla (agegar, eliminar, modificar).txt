// Ejemplo controlador clase

public class EjemploControlador implements Initializable {
    


    @FXML
    private TextField txtNombre;
    @FXML
    private TextField txtApellidos;
    @FXML
    private TextField txtResultado;
    @FXML
    private Button btnAgregar;
    @FXML
    private TableView<Persona> tblPersonas;
    @FXML
    private TableColumn<?, ?> colNombre;
    @FXML
    private TableColumn<?, ?> colApellidos;
    @FXML
    private TableColumn<?, ?> colEdad;
    
    private ObservableList<Persona> personas;
    @FXML
    private Button btnModificar;
    @FXML
    private Button btnEliminar;
    
    /**
     * Initializes the controller class.
     */
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        personas = FXCollections.observableArrayList();
        this.colNombre.setCellValueFactory(new PropertyValueFactory("Nombre"));
        this.colApellidos.setCellValueFactory(new PropertyValueFactory("Apellidos"));
        this.colEdad.setCellValueFactory(new PropertyValueFactory("Edad"));
      
    }  
    @FXML
    private void agregar(ActionEvent event) {
        
        try{
            
        
       String nombre = this.txtNombre.getText();
       String apellidos = this.txtApellidos.getText();
       int edad = Integer.parseInt(this.txtResultado.getText());
       
       Persona p = new Persona(nombre, apellidos, edad);
        if (!this.personas.contains(p)) {
            this.personas.add(p);
            this.tblPersonas.setItems(personas);
        }
        else{
            Alert alerta = new Alert(Alert.AlertType.ERROR);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("LA PERSONA EXISTE");
            alerta.showAndWait();
        }
       }
         catch (NumberFormatException e){
            Alert alerta = new Alert(Alert.AlertType.ERROR);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("FORMATO INCORRECTO");
            alerta.showAndWait();
            
        }
    }

    @FXML
    private void seleccionar(MouseEvent event) {
        Persona p = this.tblPersonas.getSelectionModel().getSelectedItem();
        
        if (p != null) {
            this.txtNombre.setText(p.getNombre());
            this.txtApellidos.setText(p.getApellidos());
            this.txtResultado.setText(p.getEdad() + "");
        }
    }

    @FXML
    private void modificar(ActionEvent event) {
    
          Persona p = this.tblPersonas.getSelectionModel().getSelectedItem();
        
        if (p == null) {
              Alert alerta = new Alert(Alert.AlertType.ERROR);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("DEBE SELECCIONAR UNA PERSONAS");
            alerta.showAndWait();
        }else{
             try{
            
        
       String nombre = this.txtNombre.getText();
       String apellidos = this.txtApellidos.getText();
       int edad = Integer.parseInt(this.txtResultado.getText());
       
       Persona aux = new Persona(nombre, apellidos, edad);
        if (!this.personas.contains(aux)) {
            p.setNombre(aux.getNombre());
            p.setApellidos(aux.getApellidos());
            p.setEdad(aux.getEdad());
            
            this.tblPersonas.refresh();
            
             Alert alerta = new Alert(Alert.AlertType.INFORMATION);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("pERSONA MODIFICADA");
            alerta.showAndWait();
            
        }
        else{
            Alert alerta = new Alert(Alert.AlertType.ERROR);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("LA PERSONA EXISTE");
            alerta.showAndWait();
        }
       }
         catch (NumberFormatException e){
            Alert alerta = new Alert(Alert.AlertType.ERROR);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("FORMATO INCORRECTO");
            alerta.showAndWait();
            
        }
        }
    }
    
    @FXML
    private void eliminar(ActionEvent event) {
        
         Persona p = this.tblPersonas.getSelectionModel().getSelectedItem();
        
        if (p == null) {
              Alert alerta = new Alert(Alert.AlertType.ERROR);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("DEBE SELECCIONAR UNA PERSONAS");
            alerta.showAndWait();
        }else{
            this.personas.remove(p);
            this.tblPersonas.refresh();
            
                  Alert alerta = new Alert(Alert.AlertType.INFORMATION);
            alerta.setHeaderText(null);
            alerta.setTitle("ERROR");
            alerta.setContentText("PERSONA ELIMINADA");
            alerta.showAndWait();
        }

    }   
}


// MAIN CLASE

public class main extends Application {
    
    @Override
    public void start(Stage primaryStage){
        try{
            FXMLLoader loader = new FXMLLoader();
            loader.setLocation(main.class.getResource("/vista/ejemploVista.fxml"));
            Pane ventana = (Pane) loader.load();
            
            Scene scene = new Scene(ventana);
            primaryStage.setScene(scene);
            primaryStage.show();
            
        }
        catch  (IOException e){
            System.out.println(e.getMessage());
        }
    }
    
    public static void main(String[] args){
        launch(args);
    }
    
    
}
 
// EL .FXML

<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TableColumn?>
<?import javafx.scene.control.TableView?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.AnchorPane?>

<AnchorPane id="AnchorPane" prefHeight="414.0" prefWidth="611.0" xmlns="http://javafx.com/javafx/21" xmlns:fx="http://javafx.com/fxml/1" fx:controller="Controlador.EjemploControlador">
   <children>
      <TextField fx:id="txtNombre" layoutX="34.0" layoutY="62.0" />
      <TextField fx:id="txtApellidos" layoutX="236.0" layoutY="62.0" />
      <TextField fx:id="txtResultado" layoutX="437.0" layoutY="62.0" />
      <Label layoutX="228.0" layoutY="39.0" prefHeight="17.0" prefWidth="61.0" text="Apellidos" />
      <Label layoutX="34.0" layoutY="39.0" text="Nombre" />
      <Label layoutX="426.0" layoutY="39.0" prefHeight="17.0" prefWidth="61.0" text="Edad" />
      <Button fx:id="btnAgregar" layoutX="34.0" layoutY="99.0" mnemonicParsing="false" onAction="#agregar" prefHeight="25.0" prefWidth="551.0" text="Agregar Persona" />
      <TableView fx:id="tblPersonas" layoutX="34.0" layoutY="139.0" onMouseClicked="#seleccionar" prefHeight="223.0" prefWidth="551.0">
        <columns>
          <TableColumn fx:id="colNombre" prefWidth="156.0" text="Nombre" />
          <TableColumn fx:id="colApellidos" prefWidth="190.0" text="Apellidos" />
            <TableColumn fx:id="colEdad" minWidth="0.0" prefWidth="143.0" text="Edad" />
        </columns>
      </TableView>
      <Button fx:id="btnModificar" layoutX="139.0" layoutY="375.0" mnemonicParsing="false" onAction="#modificar" prefHeight="25.0" prefWidth="110.0" text="Modificar" />
      <Button fx:id="btnEliminar" layoutX="306.0" layoutY="375.0" mnemonicParsing="false" onAction="#eliminar" prefHeight="25.0" prefWidth="130.0" text="Elminar" />
   </children>
</AnchorPane>
